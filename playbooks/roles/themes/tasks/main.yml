---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role themes
#
# Overview:
#
# This role performs the repetive tasks that most edX roles
# require in our default configuration.
#
# Example play:
#
# Rather than being included in the play, this role
# is included as a dependency by other roles in the meta/main.yml
# file.  The including role should add the following
# dependency definition.
#
# dependencies:
#   - role: themes
#     when do_setup_themes
#

# Generating an ssh key so service users can do a git
# clone over ssh for public repositories without any
# additional configuration
- name: create application user
  user: >
    name="{{ themes_user }}"
    home="{{ themes_home }}"
    createhome=yes
    shell=/bin/false
    generate_ssh_key=yes
  tags:
    - install
    - install:base

# Assumes that the home directory has been created above.
# In some cases(vagrant boxes) the home directory gets created
# but does not have the current owner and group. In vagrant for
# example we were seeing it defaulting it to `root` for both.
# The item that is a blank string ("") ensures the ownership
# of the home directory is always correct before proceeding.
- name: create themes home dirs
  file: >
    path="{{ themes_home }}/{{ item }}"
    state=directory
    owner="{{ themes_user }}"
    group="{{ common_web_group }}"
  with_items:
    - ""
  tags:
    - install
    - install:base

- name: set git fetch.prune to ignore deleted remote refs
  shell: git config --global fetch.prune true
  sudo_user: "{{ themes_user }}"
  when: THEMES_REPOS is defined
  tags:
    - install
    - install:code

- name: validate git protocol
  fail: msg='THEMES_REPOS.PROTOCOL must be "https" or "ssh"'
  when: (item.PROTOCOL != "https") and (item.PROTOCOL != "ssh") and THEMES_REPOS is defined
  with_items: THEMES_REPOS
  tags:
    - install
    - install:code

- name: install read-only ssh key
  copy: >
    dest="{{ themes_home }}/.ssh/{{ item.REPO }}"
    content="{{ item.SSH_KEY }}" owner={{ themes_user }}
    group={{ themes_user }} mode=0600
  when: item.PROTOCOL == "ssh" and THEMES_REPOS is defined
  with_items: THEMES_REPOS
  tags:
    - install
    - install:code

- name: checkout code over ssh
  git_2_0_1: >
    repo=git@{{ item.DOMAIN }}:{{ item.PATH }}/{{ item.REPO }}
    dest={{ item.DESTINATION }}  version={{ item.VERSION }}
    accept_hostkey=yes key_file={{ themes_home }}/.ssh/{{ item.REPO }}
  sudo_user: "{{ themes_user }}"
  register: code_checkout
  when: item.PROTOCOL == "ssh" and THEMES_REPOS is defined
  with_items: THEMES_REPOS
  tags:
    - install
    - install:code

- name: checkout code over https
  git_2_0_1: >
    repo=https://{{ item.DOMAIN }}/{{ item.PATH }}/{{ item.REPO }}
    dest={{ item.DESTINATION }}  version={{ item.VERSION }}
  sudo_user: "{{ themes_user }}"
  register: code_checkout
  when: item.PROTOCOL == "https" and THEMES_REPOS is defined
  with_items: THEMES_REPOS
  tags:
    - install
    - install:code
